/*
 * Merge Accounting API
 *
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_accounting_client

import (
	"encoding/json"
	"time"
)

// CreditNoteLineItem struct for CreditNoteLineItem
type CreditNoteLineItem struct {
	Item NullableString `json:"item,omitempty"`
	// The credit note line item's name.
	Name NullableString `json:"name,omitempty"`
	// The description of the item that is owed.
	Description NullableString `json:"description,omitempty"`
	// The credit note line item's quantity.
	Quantity NullableFloat64 `json:"quantity,omitempty"`
	// The credit note line item's memo.
	Memo NullableString `json:"memo,omitempty"`
	// The credit note line item's unit price.
	UnitPrice NullableFloat64 `json:"unit_price,omitempty"`
	// The credit note line item's tax rate.
	TaxRate NullableString `json:"tax_rate,omitempty"`
	// The credit note line item's total.
	TotalLineAmount NullableFloat64 `json:"total_line_amount,omitempty"`
	// The credit note line item's associated tracking category.
	TrackingCategory NullableString `json:"tracking_category,omitempty"`
	// The credit note line item's associated tracking categories.
	TrackingCategories []string `json:"tracking_categories"`
	// The credit note line item's account.
	Account NullableString `json:"account,omitempty"`
	// The company the credit note belongs to.
	Company NullableString `json:"company,omitempty"`
	// The third-party API ID of the matching object.
	RemoteId NullableString `json:"remote_id,omitempty"`
	// This is the datetime that this object was last updated by Merge
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewCreditNoteLineItem instantiates a new CreditNoteLineItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreditNoteLineItem(trackingCategories []string) *CreditNoteLineItem {
	this := CreditNoteLineItem{}
	this.TrackingCategories = trackingCategories
	return &this
}

// NewCreditNoteLineItemWithDefaults instantiates a new CreditNoteLineItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreditNoteLineItemWithDefaults() *CreditNoteLineItem {
	this := CreditNoteLineItem{}
	return &this
}

// GetItem returns the Item field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetItem() string {
	if o == nil || o.Item.Get() == nil {
		var ret string
		return ret
	}
	return *o.Item.Get()
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetItemOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Item.Get(), o.Item.IsSet()
}

// HasItem returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasItem() bool {
	if o != nil && o.Item.IsSet() {
		return true
	}

	return false
}

// SetItem gets a reference to the given NullableString and assigns it to the Item field.
func (o *CreditNoteLineItem) SetItem(v string) {
	o.Item.Set(&v)
}
// SetItemNil sets the value for Item to be an explicit nil
func (o *CreditNoteLineItem) SetItemNil() {
	o.Item.Set(nil)
}

// UnsetItem ensures that no value is present for Item, not even an explicit nil
func (o *CreditNoteLineItem) UnsetItem() {
	o.Item.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreditNoteLineItem) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreditNoteLineItem) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreditNoteLineItem) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreditNoteLineItem) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreditNoteLineItem) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreditNoteLineItem) UnsetDescription() {
	o.Description.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetQuantity() float64 {
	if o == nil || o.Quantity.Get() == nil {
		var ret float64
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetQuantityOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableFloat64 and assigns it to the Quantity field.
func (o *CreditNoteLineItem) SetQuantity(v float64) {
	o.Quantity.Set(&v)
}
// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *CreditNoteLineItem) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *CreditNoteLineItem) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetMemo returns the Memo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetMemo() string {
	if o == nil || o.Memo.Get() == nil {
		var ret string
		return ret
	}
	return *o.Memo.Get()
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetMemoOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Memo.Get(), o.Memo.IsSet()
}

// HasMemo returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasMemo() bool {
	if o != nil && o.Memo.IsSet() {
		return true
	}

	return false
}

// SetMemo gets a reference to the given NullableString and assigns it to the Memo field.
func (o *CreditNoteLineItem) SetMemo(v string) {
	o.Memo.Set(&v)
}
// SetMemoNil sets the value for Memo to be an explicit nil
func (o *CreditNoteLineItem) SetMemoNil() {
	o.Memo.Set(nil)
}

// UnsetMemo ensures that no value is present for Memo, not even an explicit nil
func (o *CreditNoteLineItem) UnsetMemo() {
	o.Memo.Unset()
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetUnitPrice() float64 {
	if o == nil || o.UnitPrice.Get() == nil {
		var ret float64
		return ret
	}
	return *o.UnitPrice.Get()
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetUnitPriceOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UnitPrice.Get(), o.UnitPrice.IsSet()
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasUnitPrice() bool {
	if o != nil && o.UnitPrice.IsSet() {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given NullableFloat64 and assigns it to the UnitPrice field.
func (o *CreditNoteLineItem) SetUnitPrice(v float64) {
	o.UnitPrice.Set(&v)
}
// SetUnitPriceNil sets the value for UnitPrice to be an explicit nil
func (o *CreditNoteLineItem) SetUnitPriceNil() {
	o.UnitPrice.Set(nil)
}

// UnsetUnitPrice ensures that no value is present for UnitPrice, not even an explicit nil
func (o *CreditNoteLineItem) UnsetUnitPrice() {
	o.UnitPrice.Unset()
}

// GetTaxRate returns the TaxRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetTaxRate() string {
	if o == nil || o.TaxRate.Get() == nil {
		var ret string
		return ret
	}
	return *o.TaxRate.Get()
}

// GetTaxRateOk returns a tuple with the TaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetTaxRateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaxRate.Get(), o.TaxRate.IsSet()
}

// HasTaxRate returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasTaxRate() bool {
	if o != nil && o.TaxRate.IsSet() {
		return true
	}

	return false
}

// SetTaxRate gets a reference to the given NullableString and assigns it to the TaxRate field.
func (o *CreditNoteLineItem) SetTaxRate(v string) {
	o.TaxRate.Set(&v)
}
// SetTaxRateNil sets the value for TaxRate to be an explicit nil
func (o *CreditNoteLineItem) SetTaxRateNil() {
	o.TaxRate.Set(nil)
}

// UnsetTaxRate ensures that no value is present for TaxRate, not even an explicit nil
func (o *CreditNoteLineItem) UnsetTaxRate() {
	o.TaxRate.Unset()
}

// GetTotalLineAmount returns the TotalLineAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetTotalLineAmount() float64 {
	if o == nil || o.TotalLineAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.TotalLineAmount.Get()
}

// GetTotalLineAmountOk returns a tuple with the TotalLineAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetTotalLineAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalLineAmount.Get(), o.TotalLineAmount.IsSet()
}

// HasTotalLineAmount returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasTotalLineAmount() bool {
	if o != nil && o.TotalLineAmount.IsSet() {
		return true
	}

	return false
}

// SetTotalLineAmount gets a reference to the given NullableFloat64 and assigns it to the TotalLineAmount field.
func (o *CreditNoteLineItem) SetTotalLineAmount(v float64) {
	o.TotalLineAmount.Set(&v)
}
// SetTotalLineAmountNil sets the value for TotalLineAmount to be an explicit nil
func (o *CreditNoteLineItem) SetTotalLineAmountNil() {
	o.TotalLineAmount.Set(nil)
}

// UnsetTotalLineAmount ensures that no value is present for TotalLineAmount, not even an explicit nil
func (o *CreditNoteLineItem) UnsetTotalLineAmount() {
	o.TotalLineAmount.Unset()
}

// GetTrackingCategory returns the TrackingCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetTrackingCategory() string {
	if o == nil || o.TrackingCategory.Get() == nil {
		var ret string
		return ret
	}
	return *o.TrackingCategory.Get()
}

// GetTrackingCategoryOk returns a tuple with the TrackingCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetTrackingCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TrackingCategory.Get(), o.TrackingCategory.IsSet()
}

// HasTrackingCategory returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasTrackingCategory() bool {
	if o != nil && o.TrackingCategory.IsSet() {
		return true
	}

	return false
}

// SetTrackingCategory gets a reference to the given NullableString and assigns it to the TrackingCategory field.
func (o *CreditNoteLineItem) SetTrackingCategory(v string) {
	o.TrackingCategory.Set(&v)
}
// SetTrackingCategoryNil sets the value for TrackingCategory to be an explicit nil
func (o *CreditNoteLineItem) SetTrackingCategoryNil() {
	o.TrackingCategory.Set(nil)
}

// UnsetTrackingCategory ensures that no value is present for TrackingCategory, not even an explicit nil
func (o *CreditNoteLineItem) UnsetTrackingCategory() {
	o.TrackingCategory.Unset()
}

// GetTrackingCategories returns the TrackingCategories field value
func (o *CreditNoteLineItem) GetTrackingCategories() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TrackingCategories
}

// GetTrackingCategoriesOk returns a tuple with the TrackingCategories field value
// and a boolean to check if the value has been set.
func (o *CreditNoteLineItem) GetTrackingCategoriesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TrackingCategories, true
}

// SetTrackingCategories sets field value
func (o *CreditNoteLineItem) SetTrackingCategories(v []string) {
	o.TrackingCategories = v
}

// GetAccount returns the Account field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetAccount() string {
	if o == nil || o.Account.Get() == nil {
		var ret string
		return ret
	}
	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetAccountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// HasAccount returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasAccount() bool {
	if o != nil && o.Account.IsSet() {
		return true
	}

	return false
}

// SetAccount gets a reference to the given NullableString and assigns it to the Account field.
func (o *CreditNoteLineItem) SetAccount(v string) {
	o.Account.Set(&v)
}
// SetAccountNil sets the value for Account to be an explicit nil
func (o *CreditNoteLineItem) SetAccountNil() {
	o.Account.Set(nil)
}

// UnsetAccount ensures that no value is present for Account, not even an explicit nil
func (o *CreditNoteLineItem) UnsetAccount() {
	o.Account.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetCompany() string {
	if o == nil || o.Company.Get() == nil {
		var ret string
		return ret
	}
	return *o.Company.Get()
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetCompanyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Company.Get(), o.Company.IsSet()
}

// HasCompany returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasCompany() bool {
	if o != nil && o.Company.IsSet() {
		return true
	}

	return false
}

// SetCompany gets a reference to the given NullableString and assigns it to the Company field.
func (o *CreditNoteLineItem) SetCompany(v string) {
	o.Company.Set(&v)
}
// SetCompanyNil sets the value for Company to be an explicit nil
func (o *CreditNoteLineItem) SetCompanyNil() {
	o.Company.Set(nil)
}

// UnsetCompany ensures that no value is present for Company, not even an explicit nil
func (o *CreditNoteLineItem) UnsetCompany() {
	o.Company.Unset()
}

// GetRemoteId returns the RemoteId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreditNoteLineItem) GetRemoteId() string {
	if o == nil || o.RemoteId.Get() == nil {
		var ret string
		return ret
	}
	return *o.RemoteId.Get()
}

// GetRemoteIdOk returns a tuple with the RemoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreditNoteLineItem) GetRemoteIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.RemoteId.Get(), o.RemoteId.IsSet()
}

// HasRemoteId returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasRemoteId() bool {
	if o != nil && o.RemoteId.IsSet() {
		return true
	}

	return false
}

// SetRemoteId gets a reference to the given NullableString and assigns it to the RemoteId field.
func (o *CreditNoteLineItem) SetRemoteId(v string) {
	o.RemoteId.Set(&v)
}
// SetRemoteIdNil sets the value for RemoteId to be an explicit nil
func (o *CreditNoteLineItem) SetRemoteIdNil() {
	o.RemoteId.Set(nil)
}

// UnsetRemoteId ensures that no value is present for RemoteId, not even an explicit nil
func (o *CreditNoteLineItem) UnsetRemoteId() {
	o.RemoteId.Unset()
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *CreditNoteLineItem) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreditNoteLineItem) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *CreditNoteLineItem) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *CreditNoteLineItem) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

func (o CreditNoteLineItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Item.IsSet() {
		toSerialize["item"] = o.Item.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if o.Memo.IsSet() {
		toSerialize["memo"] = o.Memo.Get()
	}
	if o.UnitPrice.IsSet() {
		toSerialize["unit_price"] = o.UnitPrice.Get()
	}
	if o.TaxRate.IsSet() {
		toSerialize["tax_rate"] = o.TaxRate.Get()
	}
	if o.TotalLineAmount.IsSet() {
		toSerialize["total_line_amount"] = o.TotalLineAmount.Get()
	}
	if o.TrackingCategory.IsSet() {
		toSerialize["tracking_category"] = o.TrackingCategory.Get()
	}
	if true {
		toSerialize["tracking_categories"] = o.TrackingCategories
	}
	if o.Account.IsSet() {
		toSerialize["account"] = o.Account.Get()
	}
	if o.Company.IsSet() {
		toSerialize["company"] = o.Company.Get()
	}
	if o.RemoteId.IsSet() {
		toSerialize["remote_id"] = o.RemoteId.Get()
	}
	if o.ModifiedAt != nil {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	return json.Marshal(toSerialize)
}

func (v *CreditNoteLineItem) UnmarshalJSON(src []byte) error {
    type CreditNoteLineItemUnmarshalTarget CreditNoteLineItem

	var intermediateResult CreditNoteLineItemUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = CreditNoteLineItem(intermediateResult)
	return nil
}
type NullableCreditNoteLineItem struct {
	value *CreditNoteLineItem
	isSet bool
}

func (v NullableCreditNoteLineItem) Get() *CreditNoteLineItem {
	return v.value
}

func (v *NullableCreditNoteLineItem) Set(val *CreditNoteLineItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditNoteLineItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditNoteLineItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditNoteLineItem(val *CreditNoteLineItem) *NullableCreditNoteLineItem {
	return &NullableCreditNoteLineItem{value: val, isSet: true}
}

func (v NullableCreditNoteLineItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditNoteLineItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


