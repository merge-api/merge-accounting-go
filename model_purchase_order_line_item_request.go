/*
 * Merge Accounting API
 *
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_accounting_client

import (
	"encoding/json"
)

// PurchaseOrderLineItemRequest # The PurchaseOrderLineItem Object ### Description The `PurchaseOrderLineItem` object is used to represent a purchase order's line item.  ### Usage Example Fetch from the `GET PurchaseOrder` endpoint and view a company's purchase orders.
type PurchaseOrderLineItemRequest struct {
	// A description of the good being purchased.
	Description NullableString `json:"description,omitempty"`
	// The line item's unit price.
	UnitPrice NullableFloat32 `json:"unit_price,omitempty"`
	// The line item's quantity.
	Quantity NullableFloat32 `json:"quantity,omitempty"`
	Item NullableString `json:"item,omitempty"`
	// The purchase order line item's account.
	Account NullableString `json:"account,omitempty"`
	// The purchase order line item's associated tracking category.
	TrackingCategory NullableString `json:"tracking_category,omitempty"`
	// The purchase order line item's associated tracking categories.
	TrackingCategories []string `json:"tracking_categories"`
	// The purchase order line item's tax amount.
	TaxAmount NullableFloat64 `json:"tax_amount,omitempty"`
	// The purchase order line item's total amount.
	TotalLineAmount NullableFloat64 `json:"total_line_amount,omitempty"`
	// The purchase order line item's currency.
	Currency NullableCurrencyEnum `json:"currency,omitempty"`
	// The purchase order line item's exchange rate.
	ExchangeRate NullableFloat64 `json:"exchange_rate,omitempty"`
	// The company the purchase order line item belongs to.
	Company NullableString `json:"company,omitempty"`
	IntegrationParams map[string]interface{} `json:"integration_params,omitempty"`
	LinkedAccountParams map[string]interface{} `json:"linked_account_params,omitempty"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewPurchaseOrderLineItemRequest instantiates a new PurchaseOrderLineItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseOrderLineItemRequest(trackingCategories []string) *PurchaseOrderLineItemRequest {
	this := PurchaseOrderLineItemRequest{}
	this.TrackingCategories = trackingCategories
	return &this
}

// NewPurchaseOrderLineItemRequestWithDefaults instantiates a new PurchaseOrderLineItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseOrderLineItemRequestWithDefaults() *PurchaseOrderLineItemRequest {
	this := PurchaseOrderLineItemRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *PurchaseOrderLineItemRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetUnitPrice() float32 {
	if o == nil || o.UnitPrice.Get() == nil {
		var ret float32
		return ret
	}
	return *o.UnitPrice.Get()
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetUnitPriceOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.UnitPrice.Get(), o.UnitPrice.IsSet()
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasUnitPrice() bool {
	if o != nil && o.UnitPrice.IsSet() {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given NullableFloat32 and assigns it to the UnitPrice field.
func (o *PurchaseOrderLineItemRequest) SetUnitPrice(v float32) {
	o.UnitPrice.Set(&v)
}
// SetUnitPriceNil sets the value for UnitPrice to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetUnitPriceNil() {
	o.UnitPrice.Set(nil)
}

// UnsetUnitPrice ensures that no value is present for UnitPrice, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetUnitPrice() {
	o.UnitPrice.Unset()
}

// GetQuantity returns the Quantity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetQuantity() float32 {
	if o == nil || o.Quantity.Get() == nil {
		var ret float32
		return ret
	}
	return *o.Quantity.Get()
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetQuantityOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Quantity.Get(), o.Quantity.IsSet()
}

// HasQuantity returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasQuantity() bool {
	if o != nil && o.Quantity.IsSet() {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given NullableFloat32 and assigns it to the Quantity field.
func (o *PurchaseOrderLineItemRequest) SetQuantity(v float32) {
	o.Quantity.Set(&v)
}
// SetQuantityNil sets the value for Quantity to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetQuantityNil() {
	o.Quantity.Set(nil)
}

// UnsetQuantity ensures that no value is present for Quantity, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetQuantity() {
	o.Quantity.Unset()
}

// GetItem returns the Item field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetItem() string {
	if o == nil || o.Item.Get() == nil {
		var ret string
		return ret
	}
	return *o.Item.Get()
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetItemOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Item.Get(), o.Item.IsSet()
}

// HasItem returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasItem() bool {
	if o != nil && o.Item.IsSet() {
		return true
	}

	return false
}

// SetItem gets a reference to the given NullableString and assigns it to the Item field.
func (o *PurchaseOrderLineItemRequest) SetItem(v string) {
	o.Item.Set(&v)
}
// SetItemNil sets the value for Item to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetItemNil() {
	o.Item.Set(nil)
}

// UnsetItem ensures that no value is present for Item, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetItem() {
	o.Item.Unset()
}

// GetAccount returns the Account field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetAccount() string {
	if o == nil || o.Account.Get() == nil {
		var ret string
		return ret
	}
	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetAccountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// HasAccount returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasAccount() bool {
	if o != nil && o.Account.IsSet() {
		return true
	}

	return false
}

// SetAccount gets a reference to the given NullableString and assigns it to the Account field.
func (o *PurchaseOrderLineItemRequest) SetAccount(v string) {
	o.Account.Set(&v)
}
// SetAccountNil sets the value for Account to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetAccountNil() {
	o.Account.Set(nil)
}

// UnsetAccount ensures that no value is present for Account, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetAccount() {
	o.Account.Unset()
}

// GetTrackingCategory returns the TrackingCategory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetTrackingCategory() string {
	if o == nil || o.TrackingCategory.Get() == nil {
		var ret string
		return ret
	}
	return *o.TrackingCategory.Get()
}

// GetTrackingCategoryOk returns a tuple with the TrackingCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetTrackingCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TrackingCategory.Get(), o.TrackingCategory.IsSet()
}

// HasTrackingCategory returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasTrackingCategory() bool {
	if o != nil && o.TrackingCategory.IsSet() {
		return true
	}

	return false
}

// SetTrackingCategory gets a reference to the given NullableString and assigns it to the TrackingCategory field.
func (o *PurchaseOrderLineItemRequest) SetTrackingCategory(v string) {
	o.TrackingCategory.Set(&v)
}
// SetTrackingCategoryNil sets the value for TrackingCategory to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetTrackingCategoryNil() {
	o.TrackingCategory.Set(nil)
}

// UnsetTrackingCategory ensures that no value is present for TrackingCategory, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetTrackingCategory() {
	o.TrackingCategory.Unset()
}

// GetTrackingCategories returns the TrackingCategories field value
func (o *PurchaseOrderLineItemRequest) GetTrackingCategories() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TrackingCategories
}

// GetTrackingCategoriesOk returns a tuple with the TrackingCategories field value
// and a boolean to check if the value has been set.
func (o *PurchaseOrderLineItemRequest) GetTrackingCategoriesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TrackingCategories, true
}

// SetTrackingCategories sets field value
func (o *PurchaseOrderLineItemRequest) SetTrackingCategories(v []string) {
	o.TrackingCategories = v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetTaxAmount() float64 {
	if o == nil || o.TaxAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.TaxAmount.Get()
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetTaxAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaxAmount.Get(), o.TaxAmount.IsSet()
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasTaxAmount() bool {
	if o != nil && o.TaxAmount.IsSet() {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given NullableFloat64 and assigns it to the TaxAmount field.
func (o *PurchaseOrderLineItemRequest) SetTaxAmount(v float64) {
	o.TaxAmount.Set(&v)
}
// SetTaxAmountNil sets the value for TaxAmount to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetTaxAmountNil() {
	o.TaxAmount.Set(nil)
}

// UnsetTaxAmount ensures that no value is present for TaxAmount, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetTaxAmount() {
	o.TaxAmount.Unset()
}

// GetTotalLineAmount returns the TotalLineAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetTotalLineAmount() float64 {
	if o == nil || o.TotalLineAmount.Get() == nil {
		var ret float64
		return ret
	}
	return *o.TotalLineAmount.Get()
}

// GetTotalLineAmountOk returns a tuple with the TotalLineAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetTotalLineAmountOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TotalLineAmount.Get(), o.TotalLineAmount.IsSet()
}

// HasTotalLineAmount returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasTotalLineAmount() bool {
	if o != nil && o.TotalLineAmount.IsSet() {
		return true
	}

	return false
}

// SetTotalLineAmount gets a reference to the given NullableFloat64 and assigns it to the TotalLineAmount field.
func (o *PurchaseOrderLineItemRequest) SetTotalLineAmount(v float64) {
	o.TotalLineAmount.Set(&v)
}
// SetTotalLineAmountNil sets the value for TotalLineAmount to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetTotalLineAmountNil() {
	o.TotalLineAmount.Set(nil)
}

// UnsetTotalLineAmount ensures that no value is present for TotalLineAmount, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetTotalLineAmount() {
	o.TotalLineAmount.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetCurrency() CurrencyEnum {
	if o == nil || o.Currency.Get() == nil {
		var ret CurrencyEnum
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetCurrencyOk() (*CurrencyEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableCurrencyEnum and assigns it to the Currency field.
func (o *PurchaseOrderLineItemRequest) SetCurrency(v CurrencyEnum) {
	o.Currency.Set(&v)
}
// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetCurrency() {
	o.Currency.Unset()
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetExchangeRate() float64 {
	if o == nil || o.ExchangeRate.Get() == nil {
		var ret float64
		return ret
	}
	return *o.ExchangeRate.Get()
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetExchangeRateOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ExchangeRate.Get(), o.ExchangeRate.IsSet()
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasExchangeRate() bool {
	if o != nil && o.ExchangeRate.IsSet() {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given NullableFloat64 and assigns it to the ExchangeRate field.
func (o *PurchaseOrderLineItemRequest) SetExchangeRate(v float64) {
	o.ExchangeRate.Set(&v)
}
// SetExchangeRateNil sets the value for ExchangeRate to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetExchangeRateNil() {
	o.ExchangeRate.Set(nil)
}

// UnsetExchangeRate ensures that no value is present for ExchangeRate, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetExchangeRate() {
	o.ExchangeRate.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetCompany() string {
	if o == nil || o.Company.Get() == nil {
		var ret string
		return ret
	}
	return *o.Company.Get()
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetCompanyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Company.Get(), o.Company.IsSet()
}

// HasCompany returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasCompany() bool {
	if o != nil && o.Company.IsSet() {
		return true
	}

	return false
}

// SetCompany gets a reference to the given NullableString and assigns it to the Company field.
func (o *PurchaseOrderLineItemRequest) SetCompany(v string) {
	o.Company.Set(&v)
}
// SetCompanyNil sets the value for Company to be an explicit nil
func (o *PurchaseOrderLineItemRequest) SetCompanyNil() {
	o.Company.Set(nil)
}

// UnsetCompany ensures that no value is present for Company, not even an explicit nil
func (o *PurchaseOrderLineItemRequest) UnsetCompany() {
	o.Company.Unset()
}

// GetIntegrationParams returns the IntegrationParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetIntegrationParams() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.IntegrationParams
}

// GetIntegrationParamsOk returns a tuple with the IntegrationParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetIntegrationParamsOk() (*map[string]interface{}, bool) {
	if o == nil || o.IntegrationParams == nil {
		return nil, false
	}
	return &o.IntegrationParams, true
}

// HasIntegrationParams returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasIntegrationParams() bool {
	if o != nil && o.IntegrationParams != nil {
		return true
	}

	return false
}

// SetIntegrationParams gets a reference to the given map[string]interface{} and assigns it to the IntegrationParams field.
func (o *PurchaseOrderLineItemRequest) SetIntegrationParams(v map[string]interface{}) {
	o.IntegrationParams = v
}

// GetLinkedAccountParams returns the LinkedAccountParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PurchaseOrderLineItemRequest) GetLinkedAccountParams() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.LinkedAccountParams
}

// GetLinkedAccountParamsOk returns a tuple with the LinkedAccountParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PurchaseOrderLineItemRequest) GetLinkedAccountParamsOk() (*map[string]interface{}, bool) {
	if o == nil || o.LinkedAccountParams == nil {
		return nil, false
	}
	return &o.LinkedAccountParams, true
}

// HasLinkedAccountParams returns a boolean if a field has been set.
func (o *PurchaseOrderLineItemRequest) HasLinkedAccountParams() bool {
	if o != nil && o.LinkedAccountParams != nil {
		return true
	}

	return false
}

// SetLinkedAccountParams gets a reference to the given map[string]interface{} and assigns it to the LinkedAccountParams field.
func (o *PurchaseOrderLineItemRequest) SetLinkedAccountParams(v map[string]interface{}) {
	o.LinkedAccountParams = v
}

func (o PurchaseOrderLineItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.UnitPrice.IsSet() {
		toSerialize["unit_price"] = o.UnitPrice.Get()
	}
	if o.Quantity.IsSet() {
		toSerialize["quantity"] = o.Quantity.Get()
	}
	if o.Item.IsSet() {
		toSerialize["item"] = o.Item.Get()
	}
	if o.Account.IsSet() {
		toSerialize["account"] = o.Account.Get()
	}
	if o.TrackingCategory.IsSet() {
		toSerialize["tracking_category"] = o.TrackingCategory.Get()
	}
	if true {
		toSerialize["tracking_categories"] = o.TrackingCategories
	}
	if o.TaxAmount.IsSet() {
		toSerialize["tax_amount"] = o.TaxAmount.Get()
	}
	if o.TotalLineAmount.IsSet() {
		toSerialize["total_line_amount"] = o.TotalLineAmount.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.ExchangeRate.IsSet() {
		toSerialize["exchange_rate"] = o.ExchangeRate.Get()
	}
	if o.Company.IsSet() {
		toSerialize["company"] = o.Company.Get()
	}
	if o.IntegrationParams != nil {
		toSerialize["integration_params"] = o.IntegrationParams
	}
	if o.LinkedAccountParams != nil {
		toSerialize["linked_account_params"] = o.LinkedAccountParams
	}
	return json.Marshal(toSerialize)
}

func (v *PurchaseOrderLineItemRequest) UnmarshalJSON(src []byte) error {
    type PurchaseOrderLineItemRequestUnmarshalTarget PurchaseOrderLineItemRequest

	var intermediateResult PurchaseOrderLineItemRequestUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = PurchaseOrderLineItemRequest(intermediateResult)
	return nil
}
type NullablePurchaseOrderLineItemRequest struct {
	value *PurchaseOrderLineItemRequest
	isSet bool
}

func (v NullablePurchaseOrderLineItemRequest) Get() *PurchaseOrderLineItemRequest {
	return v.value
}

func (v *NullablePurchaseOrderLineItemRequest) Set(val *PurchaseOrderLineItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseOrderLineItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseOrderLineItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseOrderLineItemRequest(val *PurchaseOrderLineItemRequest) *NullablePurchaseOrderLineItemRequest {
	return &NullablePurchaseOrderLineItemRequest{value: val, isSet: true}
}

func (v NullablePurchaseOrderLineItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseOrderLineItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


