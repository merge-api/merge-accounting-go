/*
 * Merge Accounting API
 *
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * API version: 1.0
 * Contact: hello@merge.dev
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package merge_accounting_client

import (
	"encoding/json"
)

// ContactRequest # The Contact Object ### Description The `Contact` object refers to either a supplier or a customer.  ### Usage Example Fetch from the `LIST Contacts` endpoint and view a company's contacts.
type ContactRequest struct {
	// The contact's name.
	Name NullableString `json:"name,omitempty"`
	// Whether the contact is a supplier.
	IsSupplier NullableBool `json:"is_supplier,omitempty"`
	// Whether the contact is a customer.
	IsCustomer NullableBool `json:"is_customer,omitempty"`
	// The contact's email address.
	EmailAddress NullableString `json:"email_address,omitempty"`
	// The contact's tax number.
	TaxNumber NullableString `json:"tax_number,omitempty"`
	// The contact's status  * `ACTIVE` - ACTIVE * `ARCHIVED` - ARCHIVED
	Status NullableStatus7d1Enum `json:"status,omitempty"`
	// The currency the contact's transactions are in.
	Currency NullableString `json:"currency,omitempty"`
	// The company the contact belongs to.
	Company NullableString `json:"company,omitempty"`
	// `Address` object IDs for the given `Contacts` object.
	Addresses *[]string `json:"addresses,omitempty"`
	// `AccountingPhoneNumber` object for the given `Contacts` object.
	PhoneNumbers *[]AccountingPhoneNumberRequest `json:"phone_numbers,omitempty"`
	IntegrationParams map[string]interface{} `json:"integration_params,omitempty"`
	LinkedAccountParams map[string]interface{} `json:"linked_account_params,omitempty"`
	// raw json response by property name
	ResponseRaw map[string]json.RawMessage `json:"-"`
}

// NewContactRequest instantiates a new ContactRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactRequest() *ContactRequest {
	this := ContactRequest{}
	return &this
}

// NewContactRequestWithDefaults instantiates a new ContactRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactRequestWithDefaults() *ContactRequest {
	this := ContactRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ContactRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ContactRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ContactRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ContactRequest) UnsetName() {
	o.Name.Unset()
}

// GetIsSupplier returns the IsSupplier field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetIsSupplier() bool {
	if o == nil || o.IsSupplier.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsSupplier.Get()
}

// GetIsSupplierOk returns a tuple with the IsSupplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetIsSupplierOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsSupplier.Get(), o.IsSupplier.IsSet()
}

// HasIsSupplier returns a boolean if a field has been set.
func (o *ContactRequest) HasIsSupplier() bool {
	if o != nil && o.IsSupplier.IsSet() {
		return true
	}

	return false
}

// SetIsSupplier gets a reference to the given NullableBool and assigns it to the IsSupplier field.
func (o *ContactRequest) SetIsSupplier(v bool) {
	o.IsSupplier.Set(&v)
}
// SetIsSupplierNil sets the value for IsSupplier to be an explicit nil
func (o *ContactRequest) SetIsSupplierNil() {
	o.IsSupplier.Set(nil)
}

// UnsetIsSupplier ensures that no value is present for IsSupplier, not even an explicit nil
func (o *ContactRequest) UnsetIsSupplier() {
	o.IsSupplier.Unset()
}

// GetIsCustomer returns the IsCustomer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetIsCustomer() bool {
	if o == nil || o.IsCustomer.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCustomer.Get()
}

// GetIsCustomerOk returns a tuple with the IsCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetIsCustomerOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.IsCustomer.Get(), o.IsCustomer.IsSet()
}

// HasIsCustomer returns a boolean if a field has been set.
func (o *ContactRequest) HasIsCustomer() bool {
	if o != nil && o.IsCustomer.IsSet() {
		return true
	}

	return false
}

// SetIsCustomer gets a reference to the given NullableBool and assigns it to the IsCustomer field.
func (o *ContactRequest) SetIsCustomer(v bool) {
	o.IsCustomer.Set(&v)
}
// SetIsCustomerNil sets the value for IsCustomer to be an explicit nil
func (o *ContactRequest) SetIsCustomerNil() {
	o.IsCustomer.Set(nil)
}

// UnsetIsCustomer ensures that no value is present for IsCustomer, not even an explicit nil
func (o *ContactRequest) UnsetIsCustomer() {
	o.IsCustomer.Unset()
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetEmailAddress() string {
	if o == nil || o.EmailAddress.Get() == nil {
		var ret string
		return ret
	}
	return *o.EmailAddress.Get()
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetEmailAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.EmailAddress.Get(), o.EmailAddress.IsSet()
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *ContactRequest) HasEmailAddress() bool {
	if o != nil && o.EmailAddress.IsSet() {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given NullableString and assigns it to the EmailAddress field.
func (o *ContactRequest) SetEmailAddress(v string) {
	o.EmailAddress.Set(&v)
}
// SetEmailAddressNil sets the value for EmailAddress to be an explicit nil
func (o *ContactRequest) SetEmailAddressNil() {
	o.EmailAddress.Set(nil)
}

// UnsetEmailAddress ensures that no value is present for EmailAddress, not even an explicit nil
func (o *ContactRequest) UnsetEmailAddress() {
	o.EmailAddress.Unset()
}

// GetTaxNumber returns the TaxNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetTaxNumber() string {
	if o == nil || o.TaxNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.TaxNumber.Get()
}

// GetTaxNumberOk returns a tuple with the TaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetTaxNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TaxNumber.Get(), o.TaxNumber.IsSet()
}

// HasTaxNumber returns a boolean if a field has been set.
func (o *ContactRequest) HasTaxNumber() bool {
	if o != nil && o.TaxNumber.IsSet() {
		return true
	}

	return false
}

// SetTaxNumber gets a reference to the given NullableString and assigns it to the TaxNumber field.
func (o *ContactRequest) SetTaxNumber(v string) {
	o.TaxNumber.Set(&v)
}
// SetTaxNumberNil sets the value for TaxNumber to be an explicit nil
func (o *ContactRequest) SetTaxNumberNil() {
	o.TaxNumber.Set(nil)
}

// UnsetTaxNumber ensures that no value is present for TaxNumber, not even an explicit nil
func (o *ContactRequest) UnsetTaxNumber() {
	o.TaxNumber.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetStatus() Status7d1Enum {
	if o == nil || o.Status.Get() == nil {
		var ret Status7d1Enum
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetStatusOk() (*Status7d1Enum, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ContactRequest) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableStatus7d1Enum and assigns it to the Status field.
func (o *ContactRequest) SetStatus(v Status7d1Enum) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ContactRequest) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ContactRequest) UnsetStatus() {
	o.Status.Unset()
}

// GetCurrency returns the Currency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetCurrency() string {
	if o == nil || o.Currency.Get() == nil {
		var ret string
		return ret
	}
	return *o.Currency.Get()
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Currency.Get(), o.Currency.IsSet()
}

// HasCurrency returns a boolean if a field has been set.
func (o *ContactRequest) HasCurrency() bool {
	if o != nil && o.Currency.IsSet() {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given NullableString and assigns it to the Currency field.
func (o *ContactRequest) SetCurrency(v string) {
	o.Currency.Set(&v)
}
// SetCurrencyNil sets the value for Currency to be an explicit nil
func (o *ContactRequest) SetCurrencyNil() {
	o.Currency.Set(nil)
}

// UnsetCurrency ensures that no value is present for Currency, not even an explicit nil
func (o *ContactRequest) UnsetCurrency() {
	o.Currency.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetCompany() string {
	if o == nil || o.Company.Get() == nil {
		var ret string
		return ret
	}
	return *o.Company.Get()
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetCompanyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Company.Get(), o.Company.IsSet()
}

// HasCompany returns a boolean if a field has been set.
func (o *ContactRequest) HasCompany() bool {
	if o != nil && o.Company.IsSet() {
		return true
	}

	return false
}

// SetCompany gets a reference to the given NullableString and assigns it to the Company field.
func (o *ContactRequest) SetCompany(v string) {
	o.Company.Set(&v)
}
// SetCompanyNil sets the value for Company to be an explicit nil
func (o *ContactRequest) SetCompanyNil() {
	o.Company.Set(nil)
}

// UnsetCompany ensures that no value is present for Company, not even an explicit nil
func (o *ContactRequest) UnsetCompany() {
	o.Company.Unset()
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *ContactRequest) GetAddresses() []string {
	if o == nil || o.Addresses == nil {
		var ret []string
		return ret
	}
	return *o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactRequest) GetAddressesOk() (*[]string, bool) {
	if o == nil || o.Addresses == nil {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *ContactRequest) HasAddresses() bool {
	if o != nil && o.Addresses != nil {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *ContactRequest) SetAddresses(v []string) {
	o.Addresses = &v
}

// GetPhoneNumbers returns the PhoneNumbers field value if set, zero value otherwise.
func (o *ContactRequest) GetPhoneNumbers() []AccountingPhoneNumberRequest {
	if o == nil || o.PhoneNumbers == nil {
		var ret []AccountingPhoneNumberRequest
		return ret
	}
	return *o.PhoneNumbers
}

// GetPhoneNumbersOk returns a tuple with the PhoneNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactRequest) GetPhoneNumbersOk() (*[]AccountingPhoneNumberRequest, bool) {
	if o == nil || o.PhoneNumbers == nil {
		return nil, false
	}
	return o.PhoneNumbers, true
}

// HasPhoneNumbers returns a boolean if a field has been set.
func (o *ContactRequest) HasPhoneNumbers() bool {
	if o != nil && o.PhoneNumbers != nil {
		return true
	}

	return false
}

// SetPhoneNumbers gets a reference to the given []AccountingPhoneNumberRequest and assigns it to the PhoneNumbers field.
func (o *ContactRequest) SetPhoneNumbers(v []AccountingPhoneNumberRequest) {
	o.PhoneNumbers = &v
}

// GetIntegrationParams returns the IntegrationParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetIntegrationParams() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.IntegrationParams
}

// GetIntegrationParamsOk returns a tuple with the IntegrationParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetIntegrationParamsOk() (*map[string]interface{}, bool) {
	if o == nil || o.IntegrationParams == nil {
		return nil, false
	}
	return &o.IntegrationParams, true
}

// HasIntegrationParams returns a boolean if a field has been set.
func (o *ContactRequest) HasIntegrationParams() bool {
	if o != nil && o.IntegrationParams != nil {
		return true
	}

	return false
}

// SetIntegrationParams gets a reference to the given map[string]interface{} and assigns it to the IntegrationParams field.
func (o *ContactRequest) SetIntegrationParams(v map[string]interface{}) {
	o.IntegrationParams = v
}

// GetLinkedAccountParams returns the LinkedAccountParams field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContactRequest) GetLinkedAccountParams() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}
	return o.LinkedAccountParams
}

// GetLinkedAccountParamsOk returns a tuple with the LinkedAccountParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContactRequest) GetLinkedAccountParamsOk() (*map[string]interface{}, bool) {
	if o == nil || o.LinkedAccountParams == nil {
		return nil, false
	}
	return &o.LinkedAccountParams, true
}

// HasLinkedAccountParams returns a boolean if a field has been set.
func (o *ContactRequest) HasLinkedAccountParams() bool {
	if o != nil && o.LinkedAccountParams != nil {
		return true
	}

	return false
}

// SetLinkedAccountParams gets a reference to the given map[string]interface{} and assigns it to the LinkedAccountParams field.
func (o *ContactRequest) SetLinkedAccountParams(v map[string]interface{}) {
	o.LinkedAccountParams = v
}

func (o ContactRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.IsSupplier.IsSet() {
		toSerialize["is_supplier"] = o.IsSupplier.Get()
	}
	if o.IsCustomer.IsSet() {
		toSerialize["is_customer"] = o.IsCustomer.Get()
	}
	if o.EmailAddress.IsSet() {
		toSerialize["email_address"] = o.EmailAddress.Get()
	}
	if o.TaxNumber.IsSet() {
		toSerialize["tax_number"] = o.TaxNumber.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Currency.IsSet() {
		toSerialize["currency"] = o.Currency.Get()
	}
	if o.Company.IsSet() {
		toSerialize["company"] = o.Company.Get()
	}
	if o.Addresses != nil {
		toSerialize["addresses"] = o.Addresses
	}
	if o.PhoneNumbers != nil {
		toSerialize["phone_numbers"] = o.PhoneNumbers
	}
	if o.IntegrationParams != nil {
		toSerialize["integration_params"] = o.IntegrationParams
	}
	if o.LinkedAccountParams != nil {
		toSerialize["linked_account_params"] = o.LinkedAccountParams
	}
	return json.Marshal(toSerialize)
}

func (v *ContactRequest) UnmarshalJSON(src []byte) error {
    type ContactRequestUnmarshalTarget ContactRequest

	var intermediateResult ContactRequestUnmarshalTarget
	var err1 = json.Unmarshal(src, &intermediateResult)
    if err1 != nil {
        return err1
    }
    var err2 = json.Unmarshal(src, &intermediateResult.ResponseRaw)
	if err2 != nil {
		return err2
	}

	*v = ContactRequest(intermediateResult)
	return nil
}
type NullableContactRequest struct {
	value *ContactRequest
	isSet bool
}

func (v NullableContactRequest) Get() *ContactRequest {
	return v.value
}

func (v *NullableContactRequest) Set(val *ContactRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableContactRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableContactRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactRequest(val *ContactRequest) *NullableContactRequest {
	return &NullableContactRequest{value: val, isSet: true}
}

func (v NullableContactRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	var err1 = json.Unmarshal(src, &v.value)
    if err1 != nil {
        return err1
    }
    return json.Unmarshal(src, &v.value.ResponseRaw)
}


